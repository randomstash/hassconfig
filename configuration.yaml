homeassistant:
  # Name of the location where Home Assistant is runnings
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 152
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Madrid
  # Customization file
  customize: !include customize.yaml

zwave:
  usb_path: /dev/ttyACM0
  config_path: /etc/openzwave/

# Enables the frontend
frontend:

# Enables configuration UI
config:

# Enables iOS component
ios:

# Track the sun
sun:

# Enable map of tracked devices
map:

http:
  # api_password: !secret http_password
  # server_port: 443
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  base_url: !secret baseurl
  ssl_certificate: !secret ssl_certificate_path
  ssl_key: !secret ssl_key_path
  # trusted_networks:
  #   - 127.0.0.1
  #   - ::1
  #   - 192.168.1.0/24
  ip_ban_enabled: False
  login_attempts_threshold: 5

updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  include_used_components: true

mqtt:
  broker: 127.0.0.1
#   username: homeassistant
#   password: homeassistant

recorder:
  purge_interval: 2
  purge_keep_days: 14
  db_url: sqlite:////home/homeassistant/.homeassistant/home-assistant_v2.db
  exclude:
    domains:
      - automation
      - weblink
      - updater
    entities:
      - sun.sun
      - sensor.luces_jardin_exporting
      - zwave.wallplug2
      - sensor.wallplug2_energy
      - sensor.wallplug2_exporting
      - sensor.wallplug2_power_2
      - sensor.wallplug2_alarm_type
      - sensor.wallplug2_alarm_level
      - sensor.wallplug2_power
      - sensor.wallplug2_power_management
      - sensor.wallplug2_sourcenodeid
      - switch.wallplug2_switch      

# View all events in a logbook
logbook:
  exclude:
    domains:
      - automation
      - weblink
      - updater
    entities:
      - sun.sun
      - sensor.luces_jardin_exporting
      - zwave.wallplug2
      - sensor.wallplug2_energy
      - sensor.wallplug2_exporting
      - sensor.wallplug2_power_2
      - sensor.wallplug2_alarm_type
      - sensor.wallplug2_alarm_level
      - sensor.wallplug2_power
      - sensor.wallplug2_power_management
      - sensor.wallplug2_sourcenodeid
      - switch.wallplug2_switch      

# Enables support for tracking state changes over time
history:
  exclude:
    domains:
      - automation
      - weblink
      - updater
    entities:
      - sun.sun
      - sensor.luces_jardin_exporting
      - zwave.wallplug2
      - sensor.wallplug2_energy
      - sensor.wallplug2_exporting
      - sensor.wallplug2_power_2
      - sensor.wallplug2_alarm_type
      - sensor.wallplug2_alarm_level
      - sensor.wallplug2_power
      - sensor.wallplug2_power_management
      - sensor.wallplug2_sourcenodeid
      - switch.wallplug2_switch      


sensor:
  - platform: yweather
    name: yw_td
    woeid: 20078604
    monitored_conditions:
      - temp_min
      - temp_max
      - weather_current

  - platform: yweather
    name: yw_tm
    woeid: 20078604
    forecast: 1
    monitored_conditions:
      - weather
      - temp_min
      - temp_max

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_free
      - type: load_15m

  - platform: speedtest
    server_id: 4374
    minute: 30
    hour:
      - 0
      - 6
      - 12
      - 18
    monitored_conditions:
      - ping
      - download
      - upload

  - platform: mqtt
    name: "mqtt_wipy1_heartbeat"
    state_topic: "hass/wipy1/heartbeat"

  - platform: mqtt
    name: "mqtt_wipy1_battery"
    state_topic: "hass/wipy1/battery"
    value_template: "{{ value[value|length-6:] }}"
    unit_of_measurement: "Volts"

  - platform: command_line
    name: "log_db_file_size"
    command: "du -m /home/homeassistant/.homeassistant/home-assistant_v2.db | cut -f1"
    scan_interval: 3600
    unit_of_measurement: 'MB'
    value_template: '{{ value | int - 1 }}'

  - platform: template
    sensors:
      flood_bano1_battery_level:
          friendly_name: "Flood_bano1 (battery)"
          unit_of_measurement: "%"
          value_template: "{{ states.zwave.flood_bano1.attributes.battery_level }}"

      flood_cocina_battery_level:
          friendly_name: "Flood_cocina (battery)"
          unit_of_measurement: "%"
          value_template: "{{ states.zwave.flood_cocina.attributes.battery_level }}"

      flood_lavadora_battery_level:
          friendly_name: "Flood_lavadora (battery)"
          unit_of_measurement: "%"
          value_template: "{{ states.zwave.flood_lavadora.attributes.battery_level }}"

      flood_lavavajillas_battery_level:
          friendly_name: "Flood_lavavajillas (battery)"
          unit_of_measurement: "%"
          value_template: "{{ states.zwave.flood_lavavajillas.attributes.battery_level }}"

      pir_bano_battery_level:
          friendly_name: "Pir_Baño (battery)"
          unit_of_measurement: "%"
          value_template: "{{ states.zwave.pir_bano.attributes.battery_level }}"

      persiana_comedor_level_current_position:
         friendly_name: "Persiana Comedor (pos)"
         unit_of_measurement: "%"
         value_template: "{{ 100 - states.cover.persiana_comedor_level.attributes.current_position }}"

      solar_angle:
         friendly_name: "Sun Angle"
         unit_of_measurement: "degrees"
         value_template: "{{ '%+.1f' | format(states.sun.sun.attributes.elevation) }}"

      climate_temp:
        friendly_name: "Suelo Radiante Temperature"
        unit_of_measurement: '°C'
        value_template: "{{ states.climate.suelo_radiante.attributes.current_temperature }}"

  - platform: history_stats
    name: heating_on_today
    entity_id: climate.suelo_radiante
    state: 'heat'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: tv_on_today
    entity_id: binary_sensor.tv_on
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

binary_sensor:
  - platform: ping
    name: tv_on
    host: 192.168.1.101
    count: 5
    scan_interval: 300

  - platform: ping
    name: external_camera_on
    host: 192.168.1.191
    count: 5
    scan_interval: 300


input_number:
  slider_luces_test:
    name: Timer test
    initial: 2
    min: 1
    max: 10
    step: 1
    unit_of_measurement: seconds
    icon: mdi:timer

  slider_luces_pasillo:
    name: Timer pasillo
    initial: 10
    min: 1
    max: 60
    step: 5
    unit_of_measurement: minutes
    icon: mdi:timer

  slider_luces_hab2_techo:
    name: Timer hab2 techo
    initial: 30
    min: 5
    max: 60
    step: 5
    unit_of_measurement: minutes
    icon: mdi:timer


counter:
  auto_turn_off:
    initial: 0
    step: 1
  auto_turn_off_test:
      initial: 0
      step: 1
  auto_turn_off_wrong_luces_pasillo_switch_2:
      initial: 0
      step: 1
  auto_turn_off_wrong:
      initial: 0
      step: 1
  auto_turn_off_luces_hab2_switch_2:
      initial: 0
      step: 1
  auto_turn_off_wrong_test:
      initial: 0
      step: 1
  auto_turn_off_wrong_luces_hab2_switch_2:
      initial: 0
      step: 1
  auto_turn_off_luces_pasillo_switch_2:
      initial: 0
      step: 1

input_boolean:
  testswitch:
    name: Test Boolean
    initial: off
  enable_wifi_kids:
    name: Enable auto-wifi kids
    initial: on
    icon: mdi:wifi
  enable_sprinkler_auto:
    name: Enable auto-sprinkler
    initial: on
    icon: mdi:spa-outlinne
  alarm_suelo_radiante:
    name: Alarm suelo_radiante
    initial: off
    icon: mdi:car-brake-parking

switch:
 - platform: template
   switches:
     testswitch:
       value_template: "{{ is_state('input_boolean.testswitch', 'on') }}"
       turn_on:
         service: input_boolean.turn_on
         entity_id: input_boolean.testswitch
       turn_off:
         service: input_boolean.turn_off
         entity_id: input_boolean.testswitch
# TODO!!
# switch:
#   platform: command_line
#   switches:
#     wifi_kids:
#       command_on: "/usr/bin/curl -X GET http://192.168.1.10/digital/4/1"
#       command_off: "/usr/bin/curl -X GET http://192.168.1.10/digital/4/0"
#       command_state: "/usr/bin/curl -X GET http://192.168.1.10/digital/4"
#       value_template: '{{ value == "1" }}'
#       friendly_name: Kitchen Lightswitch

history_graph: 
  temperature:
    name: Temperature
    entities:
      - sensor.Flood_Lavadora_temperature
      - sensor.flood_bano1_temperature
      - sensor.flood_cocina_temperature
      - sensor.flood_lavavajillas_temperature
      - sensor.pir_bano_temperature
    refresh: 120
    hours_to_show: 24

climate:
  - platform: generic_thermostat
    name: Suelo Radiante
    heater: switch.qubino_zmnhnd1_flush_1d_relay_switch_2
    target_sensor: sensor.qubino_zmnhnd1_flush_1d_relay_temperature
    min_temp: 15
    max_temp: 23
    ac_mode: False
    target_temp: 22.0
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      minutes: 15
    keep_alive:
      minutes: 15
    initial_operation_mode: "auto"
    # away_temp: 16


influxdb:
  host: 127.0.0.1
  # database_connection_pool_size: 20
  username: !secret influxdb_user
  password: !secret influxdb_pass

notify:
  - name: !secret user1
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: !secret gmail_sender
    encryption: starttls
    username: !secret gmail_sender
    password: !secret gmail_pass
    recipient:
      - !secret gmail_sender
    sender_name: Home Assistant

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

panel_iframe:
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: http://localhost:3218